/*
	copyright ¬© 2022 by @https://github.com/Chuiko-GIT
*/

package info

import (
	"fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

// handler - define telegram handler.
type handler struct {
	bot *tgbotapi.BotAPI
}

// NewHandler - constructor telegram handler.
func NewHandler(bot *tgbotapi.BotAPI) *handler {
	return &handler{bot: bot}
}

// Start - handle start command.
func (h handler) Start(message *tgbotapi.Message) error {
	msg := tgbotapi.NewMessage(message.Chat.ID, fmt.Sprintf(
		"–ü—Ä–∏–≤–µ—Ç, %s üñê"+
			"\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç! \U0001F9BEü§ñüññ", message.From.UserName),
	)

	if _, err := h.bot.Send(msg); err != nil {
		return err
	}

	return nil
}

// Info - handle info command.
func (h handler) Info(message *tgbotapi.Message) error {
	msg := tgbotapi.NewMessage(message.Chat.ID, fmt.Sprintf(
		"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –±–æ—Ç —É–º–µ–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫—É—Ä—Å–æ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∫ USDT.ü§ñ"+
			"\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã [BTC, ETH, XLM]. ü§ñ"+
			"\n–ù–∞–ø—Ä–∏–º–µ—Ä: BTC"),
	)

	if _, err := h.bot.Send(msg); err != nil {
		return err
	}

	return nil
}

// Default - handle default command.
func (h handler) Default(message *tgbotapi.Message) error {
	msg := tgbotapi.NewMessage(message.Chat.ID, fmt.Sprintf(
		"–ò–∑–≤–∏–Ω–∏, —è –Ω–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π üòø: \n%s", message.Text),
	)

	if _, err := h.bot.Send(msg); err != nil {
		return err
	}

	return nil
}
